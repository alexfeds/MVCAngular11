{"version":3,"sources":["./src/environments/environment.ts","./src/app/utils.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n"," //set time hh:mm to decimal (0.00)\r\nexport function timeToDecimal(t) {\r\n    return t.split(':')\r\n        .map(function (val) { return parseInt(val, 10); })\r\n        .reduce(function (previousValue, currentValue, index, array) {\r\n            return previousValue + currentValue / Math.pow(60, index);\r\n        });\r\n}\r\n\r\n// rounde up to the nearest 15 minutes\r\nexport function roundTime  (time, minutesToRound)  {\r\n    // e.g 05:34 AM to 05:34\r\n    time = time.slice(0, 5);\r\n    //split by column\r\n    let [hours, minutes] = time.split(':');\r\n    hours = parseInt(hours);\r\n    minutes = parseInt(minutes);\r\n\r\n    // Convert hours and minutes to time in minutes\r\n    time = (hours * 60) + minutes;\r\n\r\n    const rounded = Math.round(time / minutesToRound) * minutesToRound;\r\n    const rHr = '' + Math.floor(rounded / 60)\r\n\r\n    return rHr.padStart(2, '0') + ':' + (15 * Math.ceil(minutes / 15));\r\n}","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { State, TimeSheet } from './timeSheet';\r\nimport { DropdownModule } from 'primeng/dropdown';\r\nimport { formatDate } from \"@angular/common\";\r\nimport { ConfirmationService, MessageService } from 'primeng/api';\r\nimport { roundTime, timeToDecimal } from './utils';\r\n\r\n\r\n\r\n@Component({\r\n    selector: 'time-sheet',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.css'],\r\n    providers: [ConfirmationService, MessageService]\r\n})\r\nexport class AppComponent implements OnInit {\r\n    title = 'time sheet';\r\n\r\n    timesheets: TimeSheet[];\r\n    timesheetSecond: TimeSheet[];\r\n    selectedTimeSheet: TimeSheet;\r\n\r\n    states: State[];\r\n    jobTypes: State[];\r\n    selectedState: State[] = [];\r\n    selectedJobType: State[] = [];\r\n\r\n    hourRate: number;\r\n    duration: Date;\r\n    cellEvent;\r\n    rowIdex: number;\r\n\r\n    clonedTimeSheets: { [s: string]: TimeSheet; } = {};\r\n\r\n\r\n    constructor(private confirmationService: ConfirmationService, private notificationService: MessageService) {\r\n\r\n        this.states = [\r\n            { name: 'Active', code: 'active' },\r\n            { name: 'Submitted', code: 'submitted' },\r\n        ];\r\n        this.jobTypes = [\r\n            { name: 'Telephone Call', code: 'call' },\r\n            { name: 'Research', code: 'research' },\r\n            { name: 'Research and Drafting Document', code: 'document' },\r\n        ];\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n        //fill in default values for timesheet\r\n        this.timesheets = [\r\n            {\r\n                id: Math.floor(Math.random() * (100 + 1)),\r\n                state: this.states[0],\r\n                title: \"\",\r\n                type: this.jobTypes,\r\n                duration: null,\r\n                hourlyRate: this.hourRate,\r\n                total: 0\r\n            }\r\n        ]\r\n        this.selectedState = [this.states[0]]\r\n    }\r\n\r\n\r\n    //called to add new row to top\r\n    addNewRow() {\r\n\r\n        //this sheet is added to top\r\n        const timesheetSecond: TimeSheet[] = [\r\n            {\r\n                id: Math.floor(Math.random() * (100 + 1)),\r\n                state: this.states[0],\r\n                title: \"\",\r\n                type: this.jobTypes,\r\n                duration: null,\r\n                hourlyRate: this.hourRate,\r\n                total: 0\r\n            }]\r\n\r\n        this.selectedState = [this.states[0]]\r\n\r\n        //remove last item\r\n        this.timesheets.splice(this.timesheets.length, 1);\r\n\r\n        //check if hour rate been filled in on the form\r\n        if (this.hourRate) {\r\n            timesheetSecond[0].hourlyRate = this.hourRate;\r\n        }\r\n\r\n        // add it to the index with \r\n        this.timesheets.splice(0, 0, timesheetSecond[0]);\r\n\r\n    }\r\n\r\n\r\n    //colls when row start editted\r\n    rowEdited(event) {\r\n\r\n        //sets date from cell\r\n        this.cellEvent = event;\r\n\r\n        //check if cell has hourly rate filled in in cell by user\r\n        if (this.cellEvent.data.hourlyRate != null) {\r\n            console.log(\"well\")\r\n            this.calculateRate(event);\r\n        }\r\n    }\r\n\r\n    calculateRate(event) {\r\n        if (event) {\r\n\r\n            //sets data from cell object\r\n            const cellDuration = this.cellEvent.data.duration;\r\n            const cellHourlyRate = this.cellEvent.data.hourlyRate;\r\n            const rowIndex = this.cellEvent.index;\r\n\r\n\r\n            //check if either hour filled in in the form on in the cell\r\n            //checks if duration has been provided\r\n            if ((this.hourRate != null && cellDuration) || (cellHourlyRate != null && cellDuration)) {\r\n                console.log(\"well from cacl\")\r\n                //formate date to hh:mm a\r\n                const format = 'h:mm a';\r\n                const locale = 'en-US'\r\n                const formattedDateToTime = formatDate(cellDuration, format, locale); //return time in hh:mm format\r\n\r\n                //round to closest 5 minutes\r\n                const roundedTime = roundTime(formattedDateToTime, 15)\r\n\r\n                //set time hh:mm to decimal (0.00)\r\n                const timeInDecimal = timeToDecimal(roundedTime);\r\n\r\n                let hourByDurationResult;\r\n\r\n\r\n                //called if hour rate has been filled in the form input\r\n                if (this.hourRate != null && cellHourlyRate == null) {\r\n                    hourByDurationResult = timeInDecimal * this.hourRate;\r\n                    //called if hour rate has been filled in the cell row input\r\n                }\r\n                else if (cellHourlyRate != null) {\r\n                    hourByDurationResult = timeInDecimal * cellHourlyRate;\r\n                }\r\n\r\n                //set the calculated result back to total property of the row\r\n                this.timesheets[rowIndex].total = hourByDurationResult;\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    deleteRow(index) {\r\n        this.timesheets = this.timesheets.slice(0, index).concat(this.timesheets.slice(index + 1));\r\n    }\r\n\r\n    confirmDelete(index) {\r\n        this.confirmationService.confirm({\r\n            message: 'Are you sure that you want to delete row?',\r\n            accept: () => {\r\n                this.deleteRow(index);\r\n            }\r\n        });\r\n    }\r\n\r\n    //called when calendar has been closed event\r\n    onClose(event): void {\r\n        this.calculateRate(event);\r\n    }\r\n\r\n    // sets row index on row select\r\n    onRowSelect(event) {\r\n        this.rowIdex = event.index\r\n    }\r\n\r\n    trackByIndex(index: number, obj: any): any {\r\n        return index;\r\n    }\r\n\r\n    //on state dropdown change sets the state to the current data sheet\r\n    onStateDropChange(event) {\r\n        this.timesheets[this.rowIdex].state = event.value;\r\n    }\r\n\r\n    submitRow() {\r\n        this.timesheets[this.rowIdex].state = this.states[1];\r\n        this.selectedState[this.rowIdex] = this.states[1];\r\n\r\n        this.notificationService.add({ severity: 'success', summary: `Row  ${this.timesheets[this.rowIdex].id} submitted` });\r\n        setTimeout(() => {\r\n            this.notificationService.clear();\r\n        }, 6000);\r\n    }\r\n\r\n    unSubmitRow() {\r\n        this.timesheets[this.rowIdex].state = this.states[0];\r\n        this.selectedState[this.rowIdex] = this.states[0];\r\n\r\n        this.notificationService.add({ severity: 'success', summary: `Row  ${this.timesheets[this.rowIdex].id} unsubmitted` });\r\n        setTimeout(() => {\r\n            this.notificationService.clear();\r\n        }, 6000);\r\n\r\n    }\r\n\r\n    //used for changing states of row edit/not edit\r\n    onRowEditInit(timesheet: TimeSheet) {\r\n        this.clonedTimeSheets[timesheet.id] = { ...timesheet };\r\n    }\r\n\r\n    onRowDisable(timesheet: TimeSheet) {\r\n        this.clonedTimeSheets[timesheet.id] = { ...timesheet };\r\n    }\r\n\r\n    onRowEditCancel(timesheet: TimeSheet, index: number) {\r\n        if (this.timesheetSecond)\r\n            this.timesheetSecond[index] = this.clonedTimeSheets[timesheet.id];\r\n        delete this.timesheetSecond[timesheet.id];\r\n    }\r\n\r\n\r\n}","<p-confirmDialog header=\"Confirmation\" icon=\"pi pi-exclamation-triangle\"></p-confirmDialog>\r\n<p-messages [closable]=\"false\"></p-messages>\r\n\r\n<p-table [value]=\"timesheets\" dataKey=\"id\" editMode=\"row\" [rowTrackBy]=\"trackByIndex\" (onRowSelect)=\"onRowSelect($event)\" (onEditComplete)=\"rowEdited($event)\" (onEditInit)=\"rowEdited($event)\" selectionMode=\"single\" [(selection)]=\"selectedTimeSheet\">\r\n    <ng-template pTemplate=\"caption\">\r\n        <div class=\"p-d-flex\">\r\n            <div class=\"button-wrapper\">\r\n                <button (click)=\"addNewRow()\" pButton pRipple type=\"button\" label=\"New\" styleClass=\"p-button-sm\" class=\"p-button-rounded p-button-help\"></button>\r\n            </div>\r\n            <div class=\"button-wrapper\">\r\n                <button (click)=\"submitRow()\" icon=\"pi pi-check\" pButton pRipple type=\"button\" label=\"Submit\" styleClass=\"p-button-sm\" class=\"p-button-rounded\"></button>\r\n            </div>\r\n            <div class=\"button-wrapper\">\r\n                <button (click)=\"unSubmitRow()\" icon=\"pi pi-refresh\" pButton pRipple type=\"button\" label=\"Unsubmit\" styleClass=\"p-button-sm\" class=\"p-button-rounded  p-button-danger\"></button>\r\n            </div>\r\n\r\n\r\n            <span class=\"p-input-icon-left p-ml-auto\">\r\n\r\n                <p-inputNumber [(ngModel)]=\"hourRate\" [minFractionDigits]=\"2\" ngDefaultControl placeholder=\"Hourly Rate\" mode=\"decimal\"></p-inputNumber>\r\n\r\n            </span>\r\n\r\n        </div>\r\n    </ng-template>\r\n    <ng-template pTemplate=\"header\">\r\n        <tr>\r\n            <th style=\"width: 5rem\">Id</th>\r\n            <th style=\"width: 10rem\">State</th>\r\n            <th style=\"width: 10rem\">Title</th>\r\n            <th style=\"width: 10rem\">Type</th>\r\n            <th style=\"width: 10rem\">Duration</th>\r\n            <th style=\"width: 10rem\">Hourly Rate</th>\r\n            <th style=\"width: 10rem\">Total</th>\r\n        </tr>\r\n    </ng-template>\r\n    <ng-template pTemplate=\"body\" let-time_sheet let-editing=\"editing\" let-ri=\"rowIndex;\">\r\n\r\n        <tr [ngClass]=\"{'disabled': time_sheet.state.code == 'submitted'}\" [pEditableRow]=\"time_sheet\" [pSelectableRow]=\"time_sheet\" [pSelectableRowIndex]=\"ri\" [pEditableRowDisabled]=\"some\">\r\n\r\n            <td [ngClass]=\"{'disabled': time_sheet.state.code == 'submitted'}\" style=\"width: 10rem\" [pEditableColumn]=\"time_sheet\" [pEditableColumnField]=\"'id'\" [pEditableColumnRowIndex]=\"ri\">  \r\n                    <ng-template pTemplate=\"input\">\r\n                        <input class=\"p-inputtext-sm width-full\" pInputText type=\"text\" [(ngModel)]=\"time_sheet.id\">\r\n                    </ng-template>\r\n                        {{time_sheet.id}}        \r\n            </td>\r\n\r\n            <td [ngClass]=\"{'disabled': time_sheet.state.code == 'submitted'}\" style=\"width: 10rem\"> <p-dropdown [readonly]=\"time_sheet.state.code == 'submitted'\" (onChange)=\"onStateDropChange($event)\" styleClass=\"drop-full-width\" name=a{{ri}} [options]=\"states\" [(ngModel)]=\"selectedState[ri]\" optionLabel=\"name\"></p-dropdown></td>\r\n            <td [ngClass]=\"{'disabled': time_sheet.state.code == 'submitted'}\" style=\"width: 10rem\" [pEditableColumn]=\"time_sheet\" [pEditableColumnField]=\"'title'\" [pEditableColumnRowIndex]=\"ri\">\r\n                <p-cellEditor>\r\n                    <ng-template pTemplate=\"input\">\r\n                        <input class=\"p-inputtext-sm width-full\" pInputText type=\"text\" [(ngModel)]=\"time_sheet.title\">\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"output\">\r\n                        {{time_sheet.title}}\r\n                    </ng-template>\r\n                </p-cellEditor>\r\n            </td>\r\n            <td [ngClass]=\"{'disabled': time_sheet.state.code == 'submitted'}\" style=\"width: 10rem\"> <p-dropdown [readonly]=\"time_sheet.state.code == 'submitted'\" styleClass=\"drop-full-width\" name=a{{ri}} [options]=\"jobTypes\" [(ngModel)]=\"selectedJobType[ri]\" optionLabel=\"name\"></p-dropdown></td>\r\n            <td [ngClass]=\"{'disabled': time_sheet.state.code == 'submitted'}\" style=\"width: 10rem\" [pEditableColumn]=\"time_sheet\" [pEditableColumnField]=\"'duration'\" [pEditableColumnRowIndex]=\"ri\">\r\n                <p-cellEditor>\r\n                    <ng-template pTemplate=\"input\">\r\n\r\n                        <p-calendar [(ngModel)]=\"time_sheet.duration\" (onBlur)=\"onClose($event)\" [timeOnly]=\"true\" inputId=\"timeonly\"></p-calendar>\r\n\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"output\">\r\n                        {{time_sheet.duration | date:'hh:mm'}}\r\n                    </ng-template>\r\n                </p-cellEditor>\r\n            </td>\r\n            <td [ngClass]=\"{'disabled': time_sheet.state.code == 'submitted'}\" style=\"width: 10rem\" [pEditableColumn]=\"time_sheet\" [pEditableColumnField]=\"'hourlyRate'\" [pEditableColumnRowIndex]=\"ri\">\r\n                <p-cellEditor>\r\n                    <ng-template pTemplate=\"input\">\r\n                        <input class=\"p-inputtext-sm width-full\" pInputText type=\"text\" [(ngModel)]=\"time_sheet.hourlyRate\">\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"output\">\r\n                        {{time_sheet.hourlyRate | number : '1.2-2'}}\r\n                    </ng-template>\r\n                </p-cellEditor>\r\n            </td>\r\n            <td [ngClass]=\"{'disabled': time_sheet.state.code == 'submitted'}\" style=\"width: 10rem\" [pEditableColumn]=\"time_sheet\" [pEditableColumnField]=\"'total'\" [pEditableColumnRowIndex]=\"ri\">\r\n                <p-cellEditor>\r\n                    <ng-template pTemplate=\"input\">\r\n                        <input class=\"p-inputtext-sm width-full\" pInputText type=\"text\" [(ngModel)]=\"time_sheet.total\">\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"output\">\r\n                        {{time_sheet.total}}\r\n                    </ng-template>\r\n                </p-cellEditor>\r\n            </td>\r\n\r\n            <td style=\"text-align:center\">\r\n                <button *ngIf=\"!editing\" pButton pRipple type=\"button\" pInitEditableRow icon=\"pi pi-pencil\" (click)=\"onRowEditInit(time_sheet)\" class=\"p-button-rounded p-button-text\"></button>\r\n                <button *ngIf=\"editing\" pButton pRipple type=\"button\" pSaveEditableRow icon=\"pi pi-check\" (click)=\"onRowEditSave(time_sheet)\" class=\"p-button-rounded p-button-text p-button-success p-mr-2\"></button>\r\n                <button *ngIf=\"editing\" pButton pRipple type=\"button\" pCancelEditableRow icon=\"pi pi-times\" (click)=\"onRowEditCancel(time_sheet, ri)\" class=\"p-button-rounded p-button-text p-button-danger\"></button>\r\n                <button *ngIf=\"!editing\" pButton pRipple type=\"button\" icon=\"pi pi-trash\" (click)=\"confirmDelete(ri)\" class=\"p-button-rounded p-button-text p-button-danger\"></button>\r\n\r\n            </td>\r\n        </tr>\r\n    </ng-template>\r\n</p-table>\r\n\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { AppComponent } from './app.component';\r\n\r\n\r\n\r\n//primeng\r\nimport { TableModule } from 'primeng/table';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { InputTextModule } from 'primeng/inputtext';\r\nimport { DropdownModule } from 'primeng/dropdown';\r\nimport { InputNumberModule } from 'primeng/inputnumber';\r\nimport { CalendarModule } from 'primeng/calendar';\r\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\r\nimport { MessagesModule } from 'primeng/messages';\r\nimport { MessageModule } from 'primeng/message';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n      BrowserModule,\r\n      FormsModule,\r\n      ReactiveFormsModule,\r\n\r\n      //primeng\r\n      TableModule,\r\n      ButtonModule,\r\n      InputTextModule,\r\n      DropdownModule,\r\n      InputNumberModule,\r\n      CalendarModule,\r\n      ConfirmDialogModule,\r\n      MessageModule,\r\n      MessagesModule,\r\n\r\n      BrowserAnimationsModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}